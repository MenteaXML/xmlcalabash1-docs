<?xml version="1.0" encoding="UTF-8"?>
<project name="docs" default="default" basedir=".">
  <description>Builds the XML Calabash documentation</description>

  <property name="docbook-xslt-baseuri"
            value="https://docbook.github.io"/>

  <property name="docbook-xslt-version" value="2.0.6"/>

  <property name="docbook-xslt"
            value="${docbook-xslt-baseuri}/release/${docbook-xslt-version}/docbook-xslt2-${docbook-xslt-version}.zip"/>

  <!-- This probably looks a bit weird. Here's what's going on. We need
       XML Calabash to build the docs. But we're trying to build the
       docs to publish a release of XML Calabash. So what we do is rely
       on some previous version of the distribution, plus a recent copy
       of the calabash.jar file checked into the lib directory.
       It's a hacky mess, but there you go.
  -->

  <property name="calabash-baseuri"
            value="http://xmlcalabash.com/download"/>

  <property name="calabash-version" value="1.0.20-95"/>

  <property name="calabash"
            value="${calabash-baseuri}/calabash-${calabash-version}.zip"/>

  <!-- build location is hardcoded in here because it's also in the pipeline
       and I've been too lazy to pass it all into the pipeline as parameters
       or options.
  -->

  <!-- Chicken-and-egg. Ideally this would come from the XML Calabash
       repository but it has to be local so that Travis can find it.
  -->
  <property file="resources/etc/version.properties"/>

  <property name="version"
            value="${version.major}.${version.minor}.${version.release}"/>

  <path id="build.classpath">
    <pathelement location="build/calabash/calabash.jar"/>
    <fileset dir="build/calabash/lib">
      <include name="*.jar"/>
    </fileset>
    <fileset dir="lib">
      <include name="*.jar"/>
      <exclude name="calabash.jar"/>
    </fileset>
  </path>

  <target name="default" depends="init,docs"/>

  <target name="init">
    <mkdir dir="build"/>
    <mkdir dir="build/ref/css"/>
    <mkdir dir="build/ref/js"/>
    <mkdir dir="build/ref/img"/>
    <delete>
      <fileset dir="build/ref" includes="**/*.html"/>
    </delete>
  </target>

  <target name="check-docbook">
    <available file="build/docbook/README.md" property="docbook.present"/>
  </target>

  <target name="docbook" depends="init,check-docbook" unless="docbook.present">
    <get src="${docbook-xslt}" dest="build"/>
    <unzip src="build/docbook-xslt2-${docbook-xslt-version}.zip"
           dest="build/"/>
    <move file="build/docbook-xslt2-${docbook-xslt-version}"
          tofile="build/docbook"/>
    <delete file="build/docbook-xslt2-${docbook-xslt-version}.zip"/>
  </target>

  <target name="check-calabash">
    <available file="build/calabash/README" property="calabash.present"/>
  </target>

  <target name="calabash" depends="init,check-calabash" unless="calabash.present">
    <get src="${calabash}" dest="build"/>
    <unzip src="build/calabash-${calabash-version}.zip"
           dest="build/"/>
    <move file="build/calabash-${calabash-version}"
          tofile="build/calabash"/>
    <delete file="build/calabash-${calabash-version}.zip"/>
    <delete file="build/calabash/calabash.jar"/>
    <copy file="lib/calabash.jar" todir="build/calabash"/>
  </target>

  <target name="format" depends="init,docbook,calabash">
    <java fork="true" classname="com.xmlcalabash.drivers.Main"
          failonerror="true">
      <classpath>
        <pathelement location="build/calabash/calabash.jar"/>
        <path refid="build.classpath"/>
        <pathelement location="/Users/ndw/java"/>
      </classpath>
      <jvmarg value="-Xmx1024m"/>
      <arg value="-D"/>
      <arg value="-Xxpointer-on-text"/>
      <arg value="-isource=src/ref.xml"/>
      <arg value="style/format.xpl"/>
    </java>
  </target>

  <target name="docs" depends="format">
    <copy todir="build/ref/css">
      <fileset dir="css"/>
    </copy>
    <copy todir="build/ref/img">
      <fileset dir="img"/>
    </copy>
    <copy todir="build/ref/js">
      <fileset dir="js"/>
    </copy>
  </target>

  <target name="dist" depends="init,docs">
    <mkdir dir="dist/xmlcalabash-ref-${version}"/>
    <copy todir="dist/xmlcalabash-ref-${version}">
      <fileset dir="build/ref/"/>
    </copy>
    <zip destfile="dist/xmlcalabash-ref-${version}.zip"
         basedir="dist"
         includes="xmlcalabash-ref-${version}/**"/>
  </target>

  <target name="clean">
    <delete dir="build/ref"/>
  </target>

  <target name="realclean">
    <delete dir="build"/>
  </target>
</project>
